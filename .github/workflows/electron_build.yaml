name: Build and Release Pulse Panel

on:
  push:
    branches:
      - main  # Set this to the branch you want to build from

jobs:
  build:
    runs-on: windows-latest  # Specifies that the job should run on the latest Windows runner

    steps:
      - uses: actions/checkout@v3  # Checks out your repository under $GITHUB_WORKSPACE

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: Install dependencies with Bun
        run: bun install

      - name: Build Electron app with Bun
        run: |
          bun run build -p never

      - name: Read json
        id: read-json
        shell: pwsh
        run: |
          $json = Get-Content package.json | ConvertFrom-Json
          echo "VERSION=$($json.version)" | Out-File -FilePath $env:GITHUB_ENV -Append

      # - name: Upload Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: my-electron-app
      #     path: ./release/**/*.exe

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically creates this secret to use in your workflow
        with:
          artifacts: ./release/${{ env.VERSION }}/pulse-panel_${{ env.VERSION }}.exe
          draft: false
          prerelease: false
          generateReleaseNotes: true
          tag: v${{ env.VERSION }}
          allowUpdates: true
      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./release/${{ env.VERSION }}/pulse-panel_${{ env.VERSION }}.exe
      #     asset_name: pulse-panel_${{ env.VERSION }}.exe
      #     asset_content_type: application/octet-stream
